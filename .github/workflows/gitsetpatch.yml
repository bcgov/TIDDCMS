# This is a workflow that is manually UI or API or webhook triggered
# Repository secrets TEAMSWEBHOOK https://bcgov.webhook.office.com/webhookb2/... OPENSHIFT_TOKEN_{DEV|TEST|PROD|TOOLS}
# Repository variables VERSION_MAJOR_MINOR 0.1 VERSION_MESSAGE Dev to Test - VERSION_PREFIX v

name: Tag and Alert
# Controls when the action will run. Workflow runs when triggered using the UI or API.
on:
  # Allows manual triggering
  workflow_dispatch:

env:
  OPENSHIFT_CLUSTER: https://api.silver.devops.gov.bc.ca:6443
  OPENSHIFT_AUTH_TOKEN: ${{secrets.OPENSHIFT_TOKEN_TEST}}
  RELEASE_PREFIX: ${{vars.VERSION_PREFIX}}
  RELEASE_VERSION: ${{vars.VERSION_MAJOR_MINOR}}
  RELEASE_MESSAGE: ${{vars.VERSION_MESSAGE}} 
  RELEASE_PATCH: ${{vars.VERSION_PATCH}} 
jobs:
  # This workflow contains a jobs called "GenerateTag" "PushTag" "Build" "PushAlert"
  GenerateTag:
    runs-on: ubuntu-latest
    outputs: 
      TAGNAME: ${{steps.nexttag.outputs.gittag}}
      IMAGETAG: ${{steps.nexttag.outputs.imagetag}}
      TAGMESSAGE: ${{steps.nexttag.outputs.tagmsg}}
      TAGPATCH: ${{steps.nexttag.outputs.tagpatch}}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
          fetch-depth: '0'
    - name: Get current date
      id: date
      run: echo "date=$(date +'%B %e, %Y')" >> $GITHUB_OUTPUT
    - name: Generate Next Git Tag
      id: nexttag
      run: |
        VERSION_PATCH=$(git tag --list "${{env.RELEASE_PREFIX}}${{env.RELEASE_VERSION}}.*" --sort=-version:refname | head -n 1 | grep -oE '[0-9]+$')
        if [ -z "$VERSION_PATCH" ]; then
          VERSION_PATCH=0
        else
          VERSION_PATCH=$((VERSION_PATCH + 1))
        fi
        echo "gittag=${{env.RELEASE_PREFIX}}${{env.RELEASE_VERSION}}.${VERSION_PATCH}" >> $GITHUB_OUTPUT
        echo "imagetag=v${{env.RELEASE_VERSION}}.${VERSION_PATCH}" >> $GITHUB_OUTPUT
        echo "tagmsg=${{env.RELEASE_MESSAGE}} ${{steps.date.outputs.date}}" >> $GITHUB_OUTPUT
        echo "tagpatch=${VERSION_PATCH}" >> $GITHUB_OUTPUT
  PushTag:
    needs: [GenerateTag]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
          fetch-depth: '0'   
    - name: Push Git Tag
      env:
        TAGNAME: ${{needs.GenerateTag.outputs.TAGNAME}}
        TAGMESSAGE: ${{needs.GenerateTag.outputs.TAGMESSAGE}}
      run: |
        git config user.name "GitHub Actions"
        git config user.email "github-actions@users.noreply.github.com"
        git tag ${{env.TAGNAME}} -m "${{env.TAGMESSAGE}}"
        git push origin ${{env.TAGNAME}}
    - run: |
        gh variable list
        gh variable set VERSION_PATCH --body ${{env.TAGPATCH}}
      env:
        GITHUB_TOKEN: ${{ secrets.GH_API_TOKEN }}
